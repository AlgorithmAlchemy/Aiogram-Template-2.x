import os
from dataclasses import dataclass
from typing import List, Optional

from dotenv import load_dotenv

load_dotenv()


@dataclass
class DatabaseConfig:
    path: str = os.getenv('DB_PATH', 'data/botBD.db')
    type: str = os.getenv('DB_TYPE', 'sqlite')
    host: Optional[str] = os.getenv('DB_HOST')
    port: int = int(os.getenv('DB_PORT', '5432'))
    username: Optional[str] = os.getenv('DB_USERNAME')
    password: Optional[str] = os.getenv('DB_PASSWORD')
    name: Optional[str] = os.getenv('DB_NAME')


@dataclass
class RedisConfig:
    host: str = os.getenv('REDIS_HOST', 'localhost')
    port: int = int(os.getenv('REDIS_PORT', '6379'))
    db: int = int(os.getenv('REDIS_DB', '0'))
    password: Optional[str] = os.getenv('REDIS_PASSWORD')
    use_redis: bool = os.getenv('USE_REDIS', 'false').lower() == 'true'


@dataclass
class LoggingConfig:
    level: str = os.getenv('LOG_LEVEL', 'INFO')
    file: str = os.getenv('LOG_FILE', 'bot.log')
    format: str = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    max_size: int = int(os.getenv('LOG_MAX_SIZE', '10485760'))  # 10MB
    backup_count: int = int(os.getenv('LOG_BACKUP_COUNT', '5'))


@dataclass
class BotConfig:
    token: str = os.getenv('BOT_TOKEN', 'YOUR_BOT_TOKEN_HERE')
    name: str = os.getenv('BOT_NAME', 'Aiogram Template Bot')
    description: str = os.getenv(
        'BOT_DESCRIPTION', 'Powerful Telegram bot template'
    )
    version: str = os.getenv('BOT_VERSION', '1.0.0')
    owner: str = os.getenv('BOT_OWNER', '@your_username')
    support: str = os.getenv('SUPPORT_USERNAME', '@support_username')
    timezone: str = os.getenv('TIMEZONE', 'Europe/Moscow')

    max_retries: int = int(os.getenv('MAX_RETRIES', '3'))
    timeout: int = int(os.getenv('TIMEOUT', '30'))
    page_size: int = int(os.getenv('PAGE_SIZE', '10'))

    webhook_url: Optional[str] = os.getenv('WEBHOOK_URL')
    webhook_path: str = os.getenv('WEBHOOK_PATH', '/webhook')
    webhook_port: int = int(os.getenv('WEBHOOK_PORT', '8000'))


@dataclass
class AdminConfig:
    owner_ids: List[int] = None

    def __post_init__(self):
        if self.owner_ids is None:
            owner_ids_str = os.getenv(
                'OWNER_IDS', 'YOUR_ADMIN_ID_HERE'
            )
            if owner_ids_str != 'YOUR_ADMIN_ID_HERE':
                self.owner_ids = [int(id.strip()) for id in owner_ids_str.split(',')]
            else:
                self.owner_ids = []


class Config:
    def __init__(self):
        self.bot = BotConfig()
        self.admin = AdminConfig()
        self.database = DatabaseConfig()
        self.redis = RedisConfig()
        self.logging = LoggingConfig()

        self.chat_id = os.getenv('CHAT_ID', 'YOUR_CHAT_ID_HERE')
        self.debug = os.getenv('DEBUG', 'false').lower() == 'true'

        self.admin_help_text = """
<b>üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/ban_user - –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/unban_user - –†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
/users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
/broadcast - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
/backup - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
/restore - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
/logs - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
/restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞

<b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:</b>
/warn_user - –ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/mute_user - –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/unmute_user - –†–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/delete_user - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
/user_info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
"""

        self.help_text = """
<b>ü§ñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/about - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å
/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏
/commands - –í—Å–µ –∫–æ–º–∞–Ω–¥—ã

<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/feedback - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
/support - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
/version - –í–µ—Ä—Å–∏—è –±–æ—Ç–∞
/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
/ping - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
/uptime - –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> {support}
""".format(support=self.bot.support)

config = Config()

API_TOKEN = config.bot.token
OWNER = config.admin.owner_ids
CHAT = config.chat_id
SUPPORT = config.bot.support
admin_help_ru = config.admin_help_text
help_rus = config.help_text
